import { MapAPILoader, WindowRef, DocumentRef } from '../mapapiloader';
/**
 * Protocol enumeration
 *
 * @export
 * @enum {number}
 */
export declare enum ScriptProtocol {
    HTTP = 0,
    HTTPS = 1,
    AUTO = 2,
}
/**
 * Bing Maps V8 specific loader configuration to be used with the {@link GoogleMapAPILoader}
 *
 * @export
 */
export declare class GoogleMapAPILoaderConfig {
    /**
       * The Google Maps API Key (see:
       * https://developers.google.com/maps/documentation/javascript/get-api-key)
       */
    apiKey?: string;
    /**
     * The Google Maps client ID (for premium plans).
     * When you have a Google Maps APIs Premium Plan license, you must authenticate
     * your application with either an API key or a client ID.
     * The Google Maps API will fail to load if both a client ID and an API key are included.
     */
    clientId?: string;
    /**
     * The Google Maps channel name (for premium plans).
     * A channel parameter is an optional parameter that allows you to track usage under your client
     * ID by assigning a distinct channel to each of your applications.
     */
    channel?: string;
    /**
     * Google Maps API version.
     */
    apiVersion?: string;
    /**
     * Host and Path used for the `<script>` tag.
     */
    hostAndPath?: string;
    /**
     * Protocol used for the `<script>` tag.
     */
    protocol?: ScriptProtocol;
    /**
     * Defines which Google Maps libraries should get loaded.
     */
    libraries?: string[];
    /**
     * The default bias for the map behavior is US.
     * If you wish to alter your application to serve different map tiles or bias the
     * application, you can overwrite the default behavior (US) by defining a `region`.
     * See https://developers.google.com/maps/documentation/javascript/basics#Region
     */
    region?: string;
    /**
     * The Google Maps API uses the browser's preferred language when displaying
     * textual information. If you wish to overwrite this behavior and force the API
     * to use a given language, you can use this setting.
     * See https://developers.google.com/maps/documentation/javascript/basics#Language
     */
    language?: string;
    /**
     * The Google Maps API requires a separate library for clustering. Set the property
     * to true in order to load this library.
     * See https://developers.google.com/maps/documentation/javascript/marker-clustering
     */
    enableClustering?: boolean;
    /**
     * Host and Path used for the cluster library `<script>` tag.
     */
    clusterHostAndPath?: string;
}
/**
 * Bing Maps V8 implementation for the {@link MapAPILoader} service.
 *
 * @export
 */
export declare class GoogleMapAPILoader extends MapAPILoader {
    private _config;
    private _windowRef;
    private _documentRef;
    private _scriptLoadingPromise;
    /**
     * Gets the loader configuration.
     *
     * @readonly
     * @memberof GoogleMapAPILoader
     */
    readonly Config: GoogleMapAPILoaderConfig;
    /**
     * Creates an instance of GoogleMapAPILoader.
     * @param _config - The loader configuration.
     * @param _windowRef - An instance of {@link WindowRef}. Necessary because Bing Map V8 interacts with the window object.
     * @param _documentRef - An instance of {@link DocumentRef}.
     *                                     Necessary because Bing Map V8 interacts with the document object.
     * @memberof GoogleMapAPILoader
     */
    constructor(_config: GoogleMapAPILoaderConfig, _windowRef: WindowRef, _documentRef: DocumentRef);
    /**
     * Loads the necessary resources for Bing Maps V8.
     *
     * @memberof GoogleMapAPILoader
     */
    Load(): Promise<void>;
    /**
     * Gets the Google Maps scripts url for injections into the header.
     *
     * @param callbackName - Name of the function to be called when the Google Maps scripts are loaded.
     * @returns - The url to be used to load the Google Map scripts.
     *
     * @memberof GoogleMapAPILoader
     */
    private GetMapsScriptSrc(callbackName);
    /**
     * Gets the Google Maps Cluster library url for injections into the header.
     *
     * @returns - The url to be used to load the Google Map Cluster library.
     *
     * @memberof GoogleMapAPILoader
     */
    private GetClusterScriptSrc();
    /**
     * Gets a scripts url for injections into the header.
     *
     * @param hostAndPath - Host and path name of the script to load.
     * @param queryParams - Url query parameters.
     * @returns - The url with correct protocol, path, and query parameters.
     *
     * @memberof GoogleMapAPILoader
     */
    private GetScriptSrc(hostAndPath, queryParams);
}
